DepthMap—README

main:
	if main is run, it will open the 4th image set of testQ, and generate a depth map from it. This depthmap is then used to generate an image which incorporates it as one of the color channels (compressing the remaining color information into two channels). Jeff’s rgb2hsDMv(image, depth map) function handles this.
	if other images are desired, the num variable at the top of main can be set to the corresponding folder (1-15) in either testQ or trainingQ. those can be chosen by editing the string in the fulfile call.

depthFromStereoImages:
	This function compresses the jobs of generateDepthMap and generateMatchedPoints into one function, for usability

generateDepthMap:
	This function takes a set of vertically concatenated matched points, and generates a depth map, displays the depth map, and displays the depth map as a 3d graph. f represents the focal length, and can be set to a different value to give a different scale of image depth. the depth map is returned, with values between 0 and 1.

generateMatchedPoints:
	Given two images, this function will display the point matches as a set of lines overlayed on to a stereo anaglyph. The thresholds which determine how much a match can deviate in angle or distance can be set at the top of the function (angleStds and distStds), along with the the sift peak threshold.
	if ALLCHANNELS is set to true, the sift features will be generated separately on the red, green, and blue color channels, as opposed to a grayscale version of the image.
	This function outputs an array of matched points, of the form (x1; y1; x2; y2).



STF-README
The function do_stf should run the STF train and test protocols as defined by the original group that created it without any extra effort on the end user's part
If any issue occurs it's likely due to a directory being incorrectly pointed in config.m
Presently config.m uses a preset of Labels that work best with their dataset, these should reflect the colors used in images in the GroundTruth directory
the files train.txt and test.txt define the image sets used to train the forest and to test the forest respectively, these can be modified but other paramaters in config should be adjusted to accound for the reduced/expanded dataset
the results directory will contain saved versions of the results of your last STF run, as well as saved versions the actual forests which will have to be removed if you run the STF on a new set of data
changes to other files will cause uncertain behaviour

do_train should generate and save a new STF based on your Train dataset
do_test will test the STF generated by do_train with your test dataset